---
description: 
globs: 
alwaysApply: true
---

# Your rule content


너는 MCP를 사용할 수 있어.
다음 예시들을 살펴보고 적절히 활용해줘.

Node.js & Git
{ "tool": "terminal", "parameters": { "cmd": "git clone https://github.com/user/repo.git" } }

스프링부트 개발 도구
{ "tool": "terminal", "parameters": { "cmd": "java -version" } }
{ "tool": "terminal", "parameters": { "cmd": "gradle -v" } }
{ "tool": "terminal", "parameters": { "cmd": "gradle clean build" } }
{ "tool": "terminal", "parameters": { "cmd": "gradle bootRun" } }
{ "tool": "terminal", "parameters": { "cmd": "gradle test" } }
{ "tool": "terminal", "parameters": { "cmd": "gradle compileJava" } }
{ "tool": "terminal", "parameters": { "cmd": "gradle bootJar" } }
{ "tool": "terminal", "parameters": { "cmd": "gradle dependencies" } }
{ "tool": "terminal", "parameters": { "cmd": "gradle bootWar" } }

성능·부하 테스트 도구
{ "tool": "terminal", "parameters": { "cmd": "ab -n 1000 -c 10 http://localhost:8080/" } }
{ "tool": "terminal", "parameters": { "cmd": "wrk -t2 -c100 -d30s http://localhost:8080/" } }
{ "tool": "terminal", "parameters": { "cmd": "siege -c25 -t1M http://localhost:8080/" } }
{ "tool": "terminal", "parameters": { "cmd": "locust -f locustfile.py" } }
{ "tool": "terminal", "parameters": { "cmd": "k6 run script.js" } }
{ "tool": "terminal", "parameters": { "cmd": "hey -n1000 -c50 http://localhost:8080/" } }
{ "tool": "terminal", "parameters": { "cmd": "jmeter -n -t test.jmx" } }

기타 유틸리티
{ "tool": "terminal", "parameters": { "cmd": "curl https://api.example.com/data" } }
{ "tool": "terminal", "parameters": { "cmd": "http GET https://api.example.com/data" } }
{ "tool": "terminal", "parameters": { "cmd": "ls -la" } }
{ "tool": "terminal", "parameters": { "cmd": "dir" } }

// Oracle 11g 예시 (terminal tool 사용)
[
  { "tool": "terminal",
    "parameters": {
      "cmd": "sqlplus twowincall/twowincall@211.110.44.40:1521/o"
    }
  },
  { "tool": "terminal",
    "parameters": {
      "cmd": "sqlplus system/password@localhost:1521/XE <<EOF
SELECT table_name FROM user_tables;
EOF"
    }
  },
  { "tool": "terminal",
    "parameters": {
      "cmd": "sqlplus system/password@localhost:1521/XE <<EOF
SELECT * FROM employees WHERE ROWNUM <= 5;
EOF"
    }
  },
  { "tool": "terminal",
    "parameters": {
      "cmd": "sqlplus system/password@localhost:1521/XE <<EOF
INSERT INTO employees (employee_id, first_name, last_name) VALUES (1001, '샘플', '테스트');
EOF"
    }
  },
  { "tool": "terminal",
    "parameters": {
      "cmd": "sqlplus system/password@localhost:1521/XE <<EOF
BEGIN
  UPDATE employees SET salary = salary + 100 WHERE employee_id = 1001;
  COMMIT;
END;
EOF"
    }
  }
]

Playwright MCP Server 사용 예시
페이지 열기
{ "tool":"playwright","parameters":{"action":"goto","url":"http://localhost:8080"}} ,
로그인 버튼 클릭
{ "tool":"playwright","parameters":{"action":"click","selector":"#login-button"}} ,
검색어 입력 후 엔터
{ "tool":"playwright","parameters":{"action":"fill","selector":"input[name='q']","text":"MCP Server"}} ,
{ "tool":"playwright","parameters":{"action":"press","selector":"input[name='q']","key":"Enter"}} ,
페이지 스크린샷 저장
{ "tool":"playwright","parameters":{"action":"screenshot","path":"search-results.png"}} ,
콘솔 에러 로그 수집
{ "tool":"playwright","parameters":{"action":"getConsoleLogs"}} ,
네트워크 요청 내역 수집
{ "tool":"playwright","parameters":{"action":"getNetworkRequests"}} ,
JS 평가(페이지 타이틀 가져오기)
{ "tool":"playwright","parameters":{"action":"evaluate","expression":"document.title"}} ,
접근성 스냅샷(구조화된 DOM)
{ "tool":"playwright","parameters":{"action":"accessibilitySnapshot"}}


다음 지침을 지켜줘.

1. 폴더 및 파일 생성 및 수정은 C:\wicrm 폴더에 대해 진행해줘.
2. 작업이 진행될 때마다, 그에 맞게 docs/project_plan.md 파일을 업데이트해줘.
3. wicrm 폴더에는 이미 생성된 파일들이 있어. 기존에 존재하는 파일들 확인하여 작업 진행해야 해. 
4. 소스들이 많아 꼭 필요한 파일들만 읽은 후, 편집 또는 추가로 진행해줘. 긴 파일은 2개나 3개로 나누어서 작업해줘.
5. 각 파일이 18kb를 초과하지 않도록 긴 내용은 미리 여러 개의 파일로 기획하여 진행해줘.
6. docs 폴더에 파일을 업데이트하거나 생성할 때, 꼭 필요한 내용만 넣어서 용량을 줄여줘.
7. project_plan.md 파일에는 프로젝트 중요 사항 및 완료된 일, 해야할 일이 기록되어야 해.
8. 테스트 진행할 때는 MCP 도구를 이용해 진행해줘. localhost:8080으로 브라우저를 띄우고 각 메뉴도 클릭하고 하나씩 눌러보면서 진행해줘.
9. 쿼리 실행 등 DB 연결을 위해 Oracle 11g 명령어 사용할 때는 다음처럼 해봐.
{ "tool": "terminal", "parameters": { "cmd": "sqlplus twowincall/twowincall@211.110.44.40:1521/o<<EOF
SELECT * FROM table_name;
EOF" } }

10. C:\wicrm 폴더는 http://localhost:8080을 가리켜. 따라서 http://localhost:8080 접속시 스프링부트 애플리케이션이 실행돼. 
11. 로그 정보가 C:\wicrm\logs 이곳에 쌓이도록 로깅 설정을 진행해야 해. 그리고 너는 logs 폴더의 내용을 통해 오류 확인해야 해.
12. 자바스크립트 작성 시, 이벤트마다 콘솔에 로그를 남겨야 해. 그래야 에러 발생시 원인을 찾을 수 있어. 
13. 디버깅 시, 콘솔의 로그를 찾아봐.
14. (개발이 진행되어 필요한 경우) 테스트를 위해 다음 사용자 정보 사용해 로그인할 것
아이디: mirotest
비밀번호: alsdnrdl10
15. 작업을 임의로 진행하지 말고, 작업 전에 반드시 동의를 받아야 해.
16. 스프링부트 애플리케이션 설정은 application.properties 파일에서 관리해야 해.
17. Oracle 11g 연결 정보는 다음과 같이 application.properties에 설정해야 해:
18.기존 소스들은 절대 건들지 말고 새로 만드는 코드들은 기존 소스 방식에 맞춰서 코팅해