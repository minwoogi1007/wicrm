#########################
# 데이터베이스 설정
#########################
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@211.110.44.40:1521:o?useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=twowincall
spring.datasource.password=twowincall

#########################
# 서버 설정
#########################
server.port=8080        
  # 실제 배포에서는 Nginx/Apache 뒤에 위치할 경우 내부 포트 8080 사용

#########################
# Thymeleaf
#########################
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML

#########################
# 프록시 설정/SSL 헤더 설정 (배포시 필요)
#########################
server.tomcat.remote-ip-header=x-forwarded-for
server.tomcat.protocol-header=x-forwarded-proto
server.tomcat.protocol-header-https-value=https
server.forward-headers-strategy=NATIVE

#########################
# 파일 업로드
#########################
file.upload-dir=/uploads
file.server-url=http://175.119.224.45:8080

# 🌐 원격 파일 업로드 설정
# 옵션 1: HTTP API 업로드 (권장)
remote.upload.method=http
remote.upload.api-url=http://175.119.224.45:8080/api/upload

# 옵션 2: FTP 업로드 (대안)
# remote.upload.method=ftp
# remote.ftp.host=175.119.224.45
# remote.ftp.port=21
# remote.ftp.username=username
# remote.ftp.password=password
# remote.ftp.remote-path=/uploads/images/

# 옵션 3: SFTP 업로드 (보안)
# remote.upload.method=sftp
# remote.sftp.host=175.119.224.45
# remote.sftp.port=22
# remote.sftp.username=username
# remote.sftp.password=password
# remote.sftp.remote-path=/uploads/images/
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

#########################
# 세션 타임아웃
#########################
server.servlet.session.timeout=60m

#########################
# MyBatis
#########################
mybatis.config-location=classpath:mybatis-config.xml
mybatis.mapper-locations=mapper/*.xml
mybatis.type-handlers-package=com.wio.crm.config

#########################
# JPA
#########################
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.query.fail_on_pagination_over_collection_fetch=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.properties.hibernate.jdbc.batch_size=30
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false

#########################
# HikariCP
#########################
spring.datasource.hikari.leakDetectionThreshold=30000
spring.datasource.hikari.connectionInitSql=SELECT 1 FROM DUAL
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

#########################
# 로깅 (기본 설정)
#########################
logging.level.root=INFO
logging.level.com.wio.crm=INFO
logging.file.name=logs/wicrm.log
logging.file.max-size=10MB
logging.file.max-history=30
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n

# Spring Boot 배너 활성화
spring.main.banner-mode=console
spring.output.ansi.enabled=ALWAYS
